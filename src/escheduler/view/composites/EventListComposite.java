package escheduler.view.composites;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.AbsoluteLayout;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.Table;

public class EventListComposite extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private AbsoluteLayout mainLayout;
	@AutoGenerated
	private TabSheet eventTabSheet;
	@AutoGenerated
	private Table paEvents;
	private int paID=0;
	@AutoGenerated
	private Table myEvents;
	private int myID=0;
	
	private Panel myPanel;
	private Panel paPanel;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public EventListComposite() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private AbsoluteLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new AbsoluteLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// eventTabSheet
		eventTabSheet = buildeventTabSheet();
		this.addParticipatingEvent("Name", "Hugo", "12-01-2014", 17, 31);
		this.addMyEvent("Nam", "Date not yet set", 31, 152);
		mainLayout.addComponent(eventTabSheet, "top:0.0px;left:0.0px;");
		
		return mainLayout;
	}

	@AutoGenerated
	private TabSheet buildeventTabSheet() {
		// common part: create layout
		eventTabSheet = new TabSheet();
		eventTabSheet.setImmediate(true);
		eventTabSheet.setWidth("100%");
		
		// myEvents
		myEvents = new Table();
		myEvents.setImmediate(false);
		myEvents.setSizeFull();
		myEvents.addContainerProperty("Name", String.class, null);
		myEvents.addContainerProperty("Date", String.class, null);
		myEvents.addContainerProperty("Participating", Integer.class, null);
		myEvents.addContainerProperty("Comments", Integer.class, null);
		myPanel = new Panel();
		myPanel.setSizeFull();
		myPanel.setContent(myEvents);
		eventTabSheet.addTab(myPanel, "My Events", null);
		
		
		// paEvents
		paEvents = new Table();
		paEvents.setImmediate(false);
		paEvents.setSizeFull();
		paEvents.addContainerProperty("Name", String.class, null);
		paEvents.addContainerProperty("Organiser", String.class, null);
		paEvents.addContainerProperty("Date", String.class, null);
		paEvents.addContainerProperty("Participating", Integer.class, null);
		paEvents.addContainerProperty("Comments", Integer.class, null);
		paPanel = new Panel();
		paPanel.setSizeFull();
		paPanel.setContent(paEvents);
		eventTabSheet.addTab(paPanel, "Participating", null);
		
		return eventTabSheet;
	}
	
	/**
	 * Adds an Event, that the User created to the table
	 * 
	 * @param name
	 * @param date
	 * @param participating
	 * @param comments
	 */
	public void addMyEvent(String name, String date, Integer participating, Integer comments) {
		myEvents.addItem(new Object[] {name, date, participating, comments},new Integer(myID));
		myID++;
	}
	
	/**
	 * Adds an event that the user is participating in to the table
	 * 
	 * @param name
	 * @param organiser
	 * @param date
	 * @param participating
	 * @param comments
	 */
	public void addParticipatingEvent(String name, String organiser, String date, Integer participating, Integer comments) {
		paEvents.addItem(new Object[] {name, organiser, date, participating, comments},new Integer(paID));
		paID++;
	}

}
