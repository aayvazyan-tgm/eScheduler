package escheduler.view.composites;

import com.vaadin.annotations.AutoGenerated;
import com.vaadin.ui.CustomComponent;
import com.vaadin.ui.Label;
import com.vaadin.ui.ListSelect;
import com.vaadin.ui.OptionGroup;
import com.vaadin.ui.Panel;
import com.vaadin.ui.TabSheet;
import com.vaadin.ui.VerticalLayout;
import com.vaadin.ui.VerticalSplitPanel;

public class EventDetailComposite extends CustomComponent {

	/*- VaadinEditorProperties={"grid":"RegularGrid,20","showGrid":true,"snapToGrid":true,"snapToObject":true,"movingGuides":false,"snappingDistance":10} */

	@AutoGenerated
	private VerticalLayout mainLayout;
	@AutoGenerated
	private VerticalSplitPanel verticalSplitPanel_1;
	@AutoGenerated
	private TabSheet detailTabs;
	@AutoGenerated
	private Panel commentPanel;
	@AutoGenerated
	private VerticalLayout commentLayout;
	@AutoGenerated
	private ListSelect participantList;
	@AutoGenerated
	private OptionGroup dateVote;
	@AutoGenerated
	private Panel topPanel;
	@AutoGenerated
	private VerticalLayout topLayout;
	@AutoGenerated
	private Label description;
	@AutoGenerated
	private Label organiser;
	@AutoGenerated
	private Label type;
	@AutoGenerated
	private Label eventName;
	/**
	 * The constructor should first build the main layout, set the
	 * composition root and then do any custom initialization.
	 *
	 * The constructor will not be automatically regenerated by the
	 * visual editor.
	 */
	public EventDetailComposite() {
		buildMainLayout();
		setCompositionRoot(mainLayout);

		// TODO add user code here
	}

	@AutoGenerated
	private VerticalLayout buildMainLayout() {
		// common part: create layout
		mainLayout = new VerticalLayout();
		mainLayout.setImmediate(false);
		mainLayout.setWidth("100%");
		mainLayout.setHeight("100%");
		mainLayout.setMargin(false);
		
		// top-level component properties
		setWidth("100.0%");
		setHeight("100.0%");
		
		// verticalSplitPanel_1
		verticalSplitPanel_1 = buildVerticalSplitPanel_1();
		mainLayout.addComponent(verticalSplitPanel_1);
		
		return mainLayout;
	}

	@AutoGenerated
	private VerticalSplitPanel buildVerticalSplitPanel_1() {
		// common part: create layout
		verticalSplitPanel_1 = new VerticalSplitPanel();
		verticalSplitPanel_1.setImmediate(false);
		verticalSplitPanel_1.setWidth("100.0%");
		verticalSplitPanel_1.setHeight("100.0%");
		
		// topPanel
		topPanel = buildTopPanel();
		verticalSplitPanel_1.addComponent(topPanel);
		
		// detailTabs
		detailTabs = buildDetailTabs();
		verticalSplitPanel_1.addComponent(detailTabs);
		
		return verticalSplitPanel_1;
	}

	@AutoGenerated
	private Panel buildTopPanel() {
		// common part: create layout
		topPanel = new Panel();
		topPanel.setImmediate(false);
		topPanel.setWidth("100.0%");
		topPanel.setHeight("100.0%");
		
		// topLayout
		topLayout = buildTopLayout();
		topPanel.setContent(topLayout);
		
		return topPanel;
	}

	@AutoGenerated
	private VerticalLayout buildTopLayout() {
		// common part: create layout
		topLayout = new VerticalLayout();
		topLayout.setImmediate(false);
		topLayout.setWidth("100.0%");
		topLayout.setHeight("100.0%");
		topLayout.setMargin(false);
		
		// eventName
		eventName = new Label();
		eventName.setStyleName("h1");
		eventName.setImmediate(false);
		eventName.setWidth("-1px");
		eventName.setHeight("31px");
		eventName.setValue("Name");
		topLayout.addComponent(eventName);
		
		// type
		type = new Label();
		type.setStyleName("light");
		type.setCaption("Type");
		type.setImmediate(false);
		type.setWidth("-1px");
		type.setHeight("-1px");
		type.setValue("Type");
		topLayout.addComponent(type);
		
		// organiser
		organiser = new Label();
		organiser.setStyleName("light");
		organiser.setCaption("Organiser");
		organiser.setImmediate(false);
		organiser.setWidth("-1px");
		organiser.setHeight("-1px");
		organiser.setValue("Name");
		topLayout.addComponent(organiser);
		
		// description
		description = new Label();
		description.setStyleName("light");
		description.setCaption("Description");
		description.setImmediate(false);
		description.setWidth("100.0%");
		description.setHeight("-1px");
		description
				.setValue("Lorem ipsum dolor sit amet, consetetur sadipscing elitr, sed diam nonumy eirmod tempor invidunt ut labore et dolore magna aliquyam erat, sed diam voluptua. At vero eos et accusam et justo duo dolores et ea rebum. Stet clita kasd gubergren, no sea takimata sanctus est Lorem ipsum dolor sit amet.");
		topLayout.addComponent(description);
		
		return topLayout;
	}

	@AutoGenerated
	private TabSheet buildDetailTabs() {
		// common part: create layout
		detailTabs = new TabSheet();
		detailTabs.setImmediate(true);
		detailTabs.setWidth("100.0%");
		detailTabs.setHeight("100.0%");
		
		// dateVote
		dateVote = new OptionGroup();
		dateVote.setImmediate(false);
		dateVote.setWidth("100.0%");
		dateVote.setHeight("100.0%");
		detailTabs.addTab(dateVote, "Date", null);
		
		// participantList
		participantList = new ListSelect();
		participantList.setImmediate(false);
		participantList.setWidth("100.0%");
		participantList.setHeight("100.0%");
		detailTabs.addTab(participantList, "Participants", null);
		
		// commentPanel
		commentPanel = buildCommentPanel();
		detailTabs.addTab(commentPanel, "Comments", null);
		
		return detailTabs;
	}

	@AutoGenerated
	private Panel buildCommentPanel() {
		// common part: create layout
		commentPanel = new Panel();
		commentPanel.setImmediate(false);
		commentPanel.setWidth("100.0%");
		commentPanel.setHeight("100.0%");
		
		// commentLayout
		commentLayout = new VerticalLayout();
		commentLayout.setImmediate(false);
		commentLayout.setWidth("100.0%");
		commentLayout.setHeight("100.0%");
		commentLayout.setMargin(false);
		commentPanel.setContent(commentLayout);
		commentPanel.setSizeFull();
		this.addComment(new CommentComposite("Hodor","12-12-2014","Lorem Ipsum you know the rest!"));
		this.addComment(new CommentComposite("Hodor","12-12-2014","Lorem Ipsum you know the rest!"));
		this.addComment(new CommentComposite("Hodor","12-12-2014","Lorem Ipsum you know the rest!"));
		this.addComment(new CommentComposite("Hodor","12-12-2014","Lorem Ipsum you know the rest!"));
		this.addComment(new CommentComposite("Hodor","12-12-2014","Lorem Ipsum you know the rest!"));
		this.addComment(new CommentComposite("Hodor","12-12-2014","Lorem Ipsum you know the rest!"));
		this.addComment(new CommentComposite("Hodor","12-12-2014","Lorem Ipsum you know the rest!"));
		
		return commentPanel;
	}
	
	public boolean addParticipant(String name) {
		participantList.addItem(name);
		return true;
	}
	
	public boolean addDate(String date) {
		dateVote.addItem(date);
		return true;
	}
	public boolean removeDate(String date) {
		dateVote.removeItem(date);
		return true;
	}
	
	public boolean addComment(CommentComposite comment){
		commentLayout.addComponent(comment);
		return true;
	}
		

}
